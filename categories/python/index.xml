<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on TC blog</title>
    <link>https://www.tczhong.com/categories/python/</link>
    <description>Recent content in Python on TC blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 16 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://www.tczhong.com/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>UV package management</title>
      <link>https://www.tczhong.com/posts/python/uv_package/</link>
      <pubDate>Wed, 16 Apr 2025 00:00:00 +0000</pubDate>
      
      <guid>https://www.tczhong.com/posts/python/uv_package/</guid>
      <description>I learned uv recently when seeing lots of openai usage during their presentation so I begin to look into it. It is very fast and powerful.
1. Context: Why Choose uv Over Conda? Traditional Python environment managers like conda bundle both Python distributions and packages, resulting in large downloads, heavy disk usage, and notoriously slow “Solving environment” steps that can take minutes or more uwu. Conda’s solver must consider hundreds of packages and versions, which grows the search space and drags performance down (✿◠‿◠).</description>
    </item>
    
    <item>
      <title>Windows encoding error</title>
      <link>https://www.tczhong.com/posts/windows/encoding_problem/</link>
      <pubDate>Sun, 20 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.tczhong.com/posts/windows/encoding_problem/</guid>
      <description>Context I have a gradio app called text-generation-webui and user need to have python to start it. For normal people, they do not have python installed in their computer, so I need to package the python environment into the app. We use conda to manage the python environment and we use conda-pack to package the environment.
I create a GUI using gooey to start python cli in a subprocess. The code is like this:</description>
    </item>
    
    <item>
      <title>Windows signal handler problem</title>
      <link>https://www.tczhong.com/posts/windows/signal/</link>
      <pubDate>Sun, 20 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.tczhong.com/posts/windows/signal/</guid>
      <description>Context I am using a gradio app inside Gooey to start python cli in a subprocess. I try to handle the signal in the subprocess, but it does not work in the Windows. It works fine in the Mac, but not in the Windows.
Problem I use the code like this:
class ProcessHandler: def __init__(self) -&amp;gt; None: self.stdout = [] self.process = None signal.signal(signal.SIGTERM, self.save_stdout) signal.signal(signal.SIGINT, self.save_stdout) def change_python(self, cmd): if &amp;#34;python&amp;#34; in cmd and sys.</description>
    </item>
    
    <item>
      <title>Build Spark Streaming with Kafka</title>
      <link>https://www.tczhong.com/posts/cc/kafkastream/</link>
      <pubDate>Fri, 05 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.tczhong.com/posts/cc/kafkastream/</guid>
      <description>In this blog, I introduce a way to do streaming processing with Kafka and Spark Streaming. In the workflow, Kafka is used as a message queuing system and Spark Streaming process data from Kafka and save them into MySQL database.
Install the software In this section, we need to install these things on the machine.
Hadoop Spark Kafka MySQL In the beginning, we need to download Hadoop from the official website and then extract them.</description>
    </item>
    
    <item>
      <title>Slack and Piazza</title>
      <link>https://www.tczhong.com/posts/cc/piazza/</link>
      <pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.tczhong.com/posts/cc/piazza/</guid>
      <description>Piazza and Slack integration Slack is very popular in the workspace. As a TA in Cloud Computing Course (15-619), we also use Slack to discuss with each other and solve student&amp;rsquo;s problem together. Piazza is another common tool we used every day. It is like a forum within the course.
When a student asks a question, we want to answer them quickly. Piazza could send you new questions in real time with email.</description>
    </item>
    
  </channel>
</rss>
