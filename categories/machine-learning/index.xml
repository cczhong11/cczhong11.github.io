<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Machine learning on TC blog</title>
    <link>http://www.tczhong.com/categories/machine-learning/</link>
    <description>Recent content in Machine learning on TC blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 10 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.tczhong.com/categories/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Anomaly and Mixture of Gaussian and </title>
      <link>http://www.tczhong.com/posts/machinelearning/anomaly-and-multivariate-gaussia-distribution/</link>
      <pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.tczhong.com/posts/machinelearning/anomaly-and-multivariate-gaussia-distribution/</guid>
      <description>What is Anomaly In supervised view, we could think these points are with some labels. In unsupervised view, there are outliers, which means they have very low probability.
When we could model a dataset with a distribution, we could find which point&amp;rsquo;s probability is very low, then we could think them as a outlier.
Multivariate Gaussian distribution $$P(x) = \frac{1}{\Sigma \sqrt {2\pi}} e^{-({x - \mu } )^2/{2\Sigma ^2}}$$
In this distribution, we could prove $E[X] = \mu$, $Cov[X]=\Sigma$</description>
    </item>
    
    <item>
      <title>Decision Tree</title>
      <link>http://www.tczhong.com/posts/machinelearning/decision-tree/</link>
      <pubDate>Tue, 08 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.tczhong.com/posts/machinelearning/decision-tree/</guid>
      <description>what is desicion tree Decision tree is tree-based algorithm and it has two type: regression tree and classification tree.
The main idea for decision tree is to choose one place to cut the whole sample space at one time to get two branches and cut recurisively. In ID3 algorithm, we only consider one demension to cut the space. You can think of the hypothesis function of decision trees as partitioning the input space with axis-aligned boundaries.</description>
    </item>
    
    <item>
      <title> Dimension Rerduction</title>
      <link>http://www.tczhong.com/posts/machinelearning/dimension_reduction/</link>
      <pubDate>Sat, 05 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.tczhong.com/posts/machinelearning/dimension_reduction/</guid>
      <description>Dimension Rerduction PCA Principal component analysis (PCA) looks at “simplifying” the data in another manner, by preserving the axes of major variation in the data.
Hypothesis function $h_\theta (x) = UWx, \theta={U \in R^{n*k},W\in R^{k*n}}$. We are compressing input by multiplying by a low rank matriex.
Loss function $$\ell(h_\theta(x), x)=|\mu - x|_2^2$$
Optimization problem. $$minimize_{U,W} = \sum_{I=1}^m | UWx^{(i)}-x^{(i)}|^2_2$$
procedure Given: normalized data matrix X, k components
 Compute singular value decomposition $USV^T = X$, where $U,V$ is orthogonal and $S$ is diagonal matrix of singular values.</description>
    </item>
    
    <item>
      <title>Clustering</title>
      <link>http://www.tczhong.com/posts/machinelearning/cluster/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.tczhong.com/posts/machinelearning/cluster/</guid>
      <description>unsupervised learning the general philosophy of unsupervised learning is that we want to discover some kind of structure in the data. Different unsupervised learning methods work in very different ways, and discover very different kinds of structure, but they all have this similar element.
Recall from our presentations on supervised learnign that the three aspects of a supervised learning algorithm are:
 a hypothesis function;($R^n -&amp;gt; R^n$). Mapping input back to this input space.</description>
    </item>
    
    <item>
      <title>Cross-validation</title>
      <link>http://www.tczhong.com/posts/machinelearning/validation/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.tczhong.com/posts/machinelearning/validation/</guid>
      <description>Cross-validation Hold - out validation In this method, we will have 70% training data and 30% validation data. When we do the training, we will only use the training data, then we will use the validation data to test our model and tuning the hyperparameters
 parameters:$\theta$ hypermeters: degree of polynominal, amount of regulazation&amp;hellip;  K-hold validation In this method, we will divide the data into k part, then we will use k-1 data to train the model and have the rest one validate the model.</description>
    </item>
    
    <item>
      <title>Hypothesis testing</title>
      <link>http://www.tczhong.com/posts/machinelearning/hypothesis-testing/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.tczhong.com/posts/machinelearning/hypothesis-testing/</guid>
      <description>Hypothesis testing sample statistics and central limit theorem When we have a dataset, we could sample data from this set. And we could use sample result to estimate statistics for total set. For example, in total we have 10000 data points, but we could not get them all. Therefore, we sampled 100 data points to guess the original dataset expectation and variance. We also could know the sample mean&amp;rsquo;s expectation and variance.</description>
    </item>
    
    <item>
      <title>Logistic regression</title>
      <link>http://www.tczhong.com/posts/machinelearning/logistic-regression/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.tczhong.com/posts/machinelearning/logistic-regression/</guid>
      <description>Logistic regression This method is a varanice of a linear classier. The key this is we want to use $sigmod(\theta X)$ to classifer value.
Gradient descent This method like linear regression, it needs Least square minimization for error. Because there is only 0 and 1. Therefore we could use probability to identify the error. $g(z) = \frac{1}{1+e^{-z}}$
$P(y=0|x,\theta) = sigmod(\theta X)$
$P(y=1|x,\theta) = 1-sigmod(\theta X)$
这里使用最大似然估计，目的是得到在已知样本的情况下最有可能的$\theta$ 的值。
$L(\theta) = \prod p(y^i|x^i;\theta)$</description>
    </item>
    
    <item>
      <title>Maximum likelihood estimation</title>
      <link>http://www.tczhong.com/posts/machinelearning/maximum-likelihood-estimation/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.tczhong.com/posts/machinelearning/maximum-likelihood-estimation/</guid>
      <description>Maximum likelihood estimation In the beginning, we could get a sample set $x_1,x_2,&amp;hellip;$, and we assume these points are independent with each other. Then we could get the possibility for us to get these points. $p(x_1,x_2,x_3&amp;hellip;,x_m;\theta) = \prod_{i=1}^m p(x_i;\theta)$
So, what&amp;rsquo;s the most possible $\theta$ under this circumstance, it is when this possibility get its maximum value. Therefore, we want to maximize $\theta$, to calculate $$maximize_\theta ; \prod_{i=1}^m p(x^{(i)};\theta)$$ If we take the log to $p(x)$, we could get the **log likelihood** of the data, which is also equivalent to that value.</description>
    </item>
    
    <item>
      <title>Neural network</title>
      <link>http://www.tczhong.com/posts/machinelearning/neuralnetwork/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.tczhong.com/posts/machinelearning/neuralnetwork/</guid>
      <description>Neural network The key difference is it combines non-linear function with linear function. It could implement any function by using enough neural.
Before, we could learn $h_\theta(x)=\theta^T\phi(x)$, if we still set $\phi(x)$ to be a linear function, which we think it should be a two-stage function, but in the end it is still a one stage linear function.
Hypothesis function Neural networks are a simple extension of this idea, where we additionally apply a non-linear function after each linear transformation.</description>
    </item>
    
    <item>
      <title>Probability</title>
      <link>http://www.tczhong.com/posts/machinelearning/probaility/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.tczhong.com/posts/machinelearning/probaility/</guid>
      <description>Probability Here we want to talk about some basic knowledges of probability. In the beginning, we need to understand some notations in probability and they are confused in some times.
$p(x),p_x$ here, $x$ is an exact number and we could have an exact number for this value from 0 to 1. For exmaple, $p(1)=0.5,p(0)=0.5$
$p(X)$ here, $X$ is a random variable, it represents all the possible value. We could use $p(X=1)$ to represent the exact value.</description>
    </item>
    
    <item>
      <title>Probability modeling</title>
      <link>http://www.tczhong.com/posts/machinelearning/probability_modeling/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.tczhong.com/posts/machinelearning/probability_modeling/</guid>
      <description>Probability modeling What is probability modeling? It is a high dimension distribution for p(X). It represents distribution more compactly by exploiting conditional independencies.
Bayesian Network The main idea is to represent $P(X)$ with $\prod P(X_i|parents(X_i))$. It is also a generative model, which means it construct distribution as a &amp;lsquo;sequential story&amp;rsquo;.
Markov chain Monte Carlo Markov chain Monte Carlo (MCMC) refers to a class of methods that approximately draw samples from over the hidden variables</description>
    </item>
    
    <item>
      <title>Recommendation</title>
      <link>http://www.tczhong.com/posts/machinelearning/recommender/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.tczhong.com/posts/machinelearning/recommender/</guid>
      <description>Recommendation Collaborative filtering Solely upon the preferences that other users have indicated for these items.(rating for items): row -&amp;gt; users column-&amp;gt; items
The task of collaborative filtering, then, is to “fill in” the remaining entries of this matrix given the observed matrix. This X matrix that we observed is sparse but the unknown entries do not correspond to actual zeros in the matrix, but are rather just truly unknown.
▪	User-user approaches: In this approach we estimate a user’s rating of an item by finding “similar” users and then looking at their predictions for this item.</description>
    </item>
    
  </channel>
</rss>